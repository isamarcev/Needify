;;
;; Header files for JobOffer
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_comment
tuple __tact_string_builder_start_comment() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; $Transfer$_store
builder $Transfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $Transfer$_store_cell
cell $Transfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Approve$_load
(slice, ((int))) $Approve$_load(slice sc_0) inline;

;; $ChangeStatus$_load
(slice, ((int))) $ChangeStatus$_load(slice sc_0) inline;

;; $JobOfferCloseState$_store
builder $JobOfferCloseState$_store(builder build_0, (int, int) v) inline;

;; $JobOfferCloseState$_load
(slice, ((int, int))) $JobOfferCloseState$_load(slice sc_0) inline;

;; $JobOffer$_store
builder $JobOffer$_store(builder build_0, (slice, slice, slice, int, slice, slice, (int, int), int, int, slice) v) inline;

;; $JobOffer$_load
(slice, ((slice, slice, slice, int, slice, slice, (int, int), int, int, slice))) $JobOffer$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $ContractData$_to_external
(slice, slice, int, slice, slice, int, int, slice, int, slice) $ContractData$_to_external(((slice, slice, int, slice, slice, int, int, slice, int, slice)) v) inline;

;; $TokenWallet$init$_store
builder $TokenWallet$init$_store(builder build_0, (slice, slice) v) inline;

;; $JobOffer$init$_load
(slice, ((slice, slice, int, slice, slice))) $JobOffer$init$_load(slice sc_0) inline;

;; $JobOfferCloseState$_constructor_doer_owner
((int, int)) $JobOfferCloseState$_constructor_doer_owner(int doer, int owner) inline;

;; $JobOffer$_contract_init
(slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $JobOffer$_contract_init(slice $title, slice $description, int $price, slice $order, slice $jetton_master) impure inline_ref;

;; $JobOffer$_contract_load
(slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $JobOffer$_contract_load() impure inline_ref;

;; $JobOffer$_contract_store
() $JobOffer$_contract_store((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $String$_fun_asComment
cell $String$_fun_asComment(slice $self) impure inline_ref;

;; $TokenWallet$_init_child
(cell, cell) $TokenWallet$_init_child(cell sys', slice $owner, slice $master) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body_code_data(slice to, int value, int mode, int bounce, cell body, cell code, cell data) inline;

;; $Transfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $Transfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int query_id, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline;

;; $JobOffer$_fun_send_deposit
((slice, slice, slice, int, slice, slice, (int, int), int, int, slice), ()) $JobOffer$_fun_send_deposit((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $self, slice $address, int $amount) impure inline_ref;

;; $ContractData$_constructor_title_description_price_owner_doer_is_locked_state_jetton_master_balance_my_jetton_address
((slice, slice, int, slice, slice, int, int, slice, int, slice)) $ContractData$_constructor_title_description_price_owner_doer_is_locked_state_jetton_master_balance_my_jetton_address(slice title, slice description, int price, slice owner, slice doer, int is_locked, int state, slice jetton_master, int balance, slice my_jetton_address) inline;

;; $JobOffer$_fun_jetton_wallet
((slice, slice, slice, int, slice, slice, (int, int), int, int, slice), slice) $JobOffer$_fun_jetton_wallet((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $self) impure inline_ref;

;; $JobOffer$_fun_job_data
((slice, slice, slice, int, slice, slice, (int, int), int, int, slice), (slice, slice, int, slice, slice, int, int, slice, int, slice)) $JobOffer$_fun_job_data((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $self) impure inline_ref;

;; $JobOffer$_fun_forward
((slice, slice, slice, int, slice, slice, (int, int), int, int, slice), ()) $JobOffer$_fun_forward((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $JobOffer$_fun_notify
((slice, slice, slice, int, slice, slice, (int, int), int, int, slice), ()) $JobOffer$_fun_notify((slice, slice, slice, int, slice, slice, (int, int), int, int, slice) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
